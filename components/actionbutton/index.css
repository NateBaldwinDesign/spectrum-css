/* stylelint-disable spectrum-tools/no-unknown-custom-properties -- references definitions files */

/*!
Copyright 2023 Adobe. All rights reserved.
This file is licensed to you under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License. You may obtain a copy
of the License at http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under
the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
OF ANY KIND, either express or implied. See the License for the specific language
governing permissions and limitations under the License.
*/

@import "@spectrum-css/commons/basebutton.css";
@import "./definitions.css";

.spectrum-ActionButton {
	@extend %spectrum-BaseButton;
	position: relative;

	min-inline-size: var(--spectrum-actionbutton-min-width);
	block-size: var(--spectrum-actionbutton-height);

	border-radius: var(--spectrum-actionbutton-border-radius);
	border-width: var(--spectrum-actionbutton-border-width);

	gap: calc(var(--spectrum-actionbutton-text-to-visual) + var(--spectrum-actionbutton-edge-to-text) - var(--spectrum-actionbutton-edge-to-visual-only));

	/* Start with text-only padding */
	padding-inline: var(--spectrum-actionbutton-edge-to-text);

	background-color: var(--spectrum-actionbutton-background-color-default);
	border-color: var(--spectrum-actionbutton-border-color-default);
	color: var(--spectrum-actionbutton-content-color-default);

	/* special cases for focus-ring */
	transition: border-color var(--spectrum-actionbutton-animation-duration) ease-in-out;

	&:hover {
		--spectrum-actionbutton-background-color-default: var(--spectrum-actionbutton-background-color-hover);
		--spectrum-actionbutton-border-color-default: var(--spectrum-actionbutton-border-color-hover);
		--spectrum-actionbutton-content-color-default: var(--spectrum-actionbutton-content-color-hover);
	}

	&:focus-visible {
		--spectrum-actionbutton-background-color-default: var(--spectrum-actionbutton-background-color-focus);
		--spectrum-actionbutton-border-color-default: var(--spectrum-actionbutton-border-color-focus);
		--spectrum-actionbutton-content-color-default: var(--spectrum-actionbutton-content-color-focus);
	}

	&:active {
		--spectrum-actionbutton-background-color-default: var(--spectrum-actionbutton-background-color-down);
		--spectrum-actionbutton-border-color-default: var(--spectrum-actionbutton-border-color-down);
		--spectrum-actionbutton-content-color-default: var(--spectrum-actionbutton-content-color-down);
	}

	&:disabled,
	&.is-disabled {
		--spectrum-actionbutton-background-color-default: var(--spectrum-actionbutton-background-color-disabled);
		--spectrum-actionbutton-border-color-default: var(--spectrum-actionbutton-border-color-disabled);
		--spectrum-actionbutton-content-color-default: var(--spectrum-actionbutton-content-color-disabled);
	}

	&.is-selected,
	&[selected] {
		--spectrum-actionbutton-background-color-default: var(--spectrum-actionbutton-background-color-selected-default);
		--spectrum-actionbutton-content-color-default: var(--spectrum-actionbutton-content-color-selected-default);

		&:hover {
			--spectrum-actionbutton-background-color-default: var(--spectrum-actionbutton-background-color-selected-hover);
			--spectrum-actionbutton-content-color-default: var(--spectrum-actionbutton-content-color-selected-hover);
		}

		&:active {
			--spectrum-actionbutton-background-color-default: var(--spectrum-actionbutton-background-color-selected-down);
			--spectrum-actionbutton-content-color-default: var(--spectrum-actionbutton-content-color-selected-down);
		}

		&:focus-visible {
			--spectrum-actionbutton-background-color-default: var(--spectrum-actionbutton-background-color-selected-focus);
			--spectrum-actionbutton-content-color-default: var(--spectrum-actionbutton-content-color-selected-focus);
		}
	}

	/* special cases for focus-ring */
	&::after {
		position: absolute;
		inset: 0;

		margin: calc((var(--spectrum-actionbutton-focus-indicator-gap) + var(--spectrum-actionbutton-border-width)) * -1);

		border-radius: var(--spectrum-actionbutton-focus-indicator-border-radius);

		transition: box-shadow var(--spectrum-actionbutton-animation-duration) ease-in-out;

		pointer-events: none;
		content: "";
	}

	&:focus-visible {
		/* kill the default ring */
		box-shadow: none;
		outline: none;

		&::after {
			box-shadow: 0 0 0 var(--spectrum-actionbutton-focus-indicator-thickness) var(--spectrum-actionbutton-focus-indicator-color);
		}
	}
}

a.spectrum-ActionButton {
	@extend %spectrum-AnchorButton;
}

.spectrum-ActionButton-icon {
	@extend %spectrum-ButtonIcon;

	inline-size: var(--spectrum-actionbutton-icon-size);
	block-size: var(--spectrum-actionbutton-icon-size);

	/* adjust icon positioning to match UI kit */
	margin-inline-start: calc(var(--spectrum-actionbutton-edge-to-visual) - var(--spectrum-actionbutton-edge-to-text));
	margin-inline-end: calc(var(--spectrum-actionbutton-edge-to-visual-only) - var(--spectrum-actionbutton-edge-to-text));

	color: inherit;
}

.spectrum-ActionButton-hold + .spectrum-ActionButton-icon,
.spectrum-ActionButton-icon:only-child {
	/* Augment the margin correction for the icon only scenario */
	margin-inline-start: calc(var(--spectrum-actionbutton-edge-to-visual-only) - var(--spectrum-actionbutton-edge-to-text));
}

.spectrum-ActionButton-label {
	@extend %spectrum-ButtonLabel;
	pointer-events: none;

	font-size: var(--spectrum-actionbutton-font-size);
	white-space: nowrap;
	color: var(--spectrum-actionbutton-label-color, inherit);

	text-overflow: ellipsis;
	overflow: hidden;
}

.spectrum-ActionButton-hold {
	position: absolute;
	inset-inline-end: calc(var(--spectrum-actionbutton-edge-to-hold-icon) - var(--spectrum-actionbutton-border-width));
	inset-block-end: calc(var(--spectrum-actionbutton-edge-to-hold-icon) - var(--spectrum-actionbutton-border-width));

	color: inherit;

	transform: var(--spectrum-logical-rotation);
}

/** INTERNAL REMAPPING pointing the custom property to it's more specific custom property sibling **/
.spectrum-ActionButton--emphasized {
	--spectrum-actionbutton-background-color-selected-default: var(--spectrum-actionbutton-background-color-emphasized-selected-default);
	--spectrum-actionbutton-background-color-selected-hover: var(--spectrum-actionbutton-background-color-emphasized-selected-hover);
	--spectrum-actionbutton-background-color-selected-down: var(--spectrum-actionbutton-background-color-emphasized-selected-down);
	--spectrum-actionbutton-background-color-selected-focus: var(--spectrum-actionbutton-background-color-emphasized-selected-focus);

	--spectrum-actionbutton-content-color-selected-default: var(--spectrum-actionbutton-content-color-emphasized-selected-default);
	--spectrum-actionbutton-content-color-selected-hover: var(--spectrum-actionbutton-content-color-emphasized-selected-hover);
	--spectrum-actionbutton-content-color-selected-down: var(--spectrum-actionbutton-content-color-emphasized-selected-down);
	--spectrum-actionbutton-content-color-selected-focus: var(--spectrum-actionbutton-content-color-emphasized-selected-focus);
}

.spectrum-ActionButton--quiet {
	--spectrum-actionbutton-background-color-default: var(--spectrum-actionbutton-background-color-quiet-default);
	--spectrum-actionbutton-background-color-hover: var(--spectrum-actionbutton-background-color-quiet-hover);
	--spectrum-actionbutton-background-color-down: var(--spectrum-actionbutton-background-color-quiet-down);
	--spectrum-actionbutton-background-color-focus: var(--spectrum-actionbutton-background-color-quiet-focus);

	--spectrum-actionbutton-border-color-default: var(--spectrum-actionbutton-border-color-quiet-default);
	--spectrum-actionbutton-border-color-hover: var(--spectrum-actionbutton-border-color-quiet-hover);
	--spectrum-actionbutton-border-color-down: var(--spectrum-actionbutton-border-color-quiet-down);
	--spectrum-actionbutton-border-color-focus: var(--spectrum-actionbutton-border-color-quiet-focus);

	--spectrum-actionbutton-background-color-disabled: var(--spectrum-actionbutton-background-color-quiet-disabled);
	--spectrum-actionbutton-border-color-disabled: var(--spectrum-actionbutton-border-color-quiet-disabled);

	--spectrum-actionbutton-border-color-selected-default: var(--spectrum-actionbutton-border-color-quiet-selected-default);
	--spectrum-actionbutton-border-color-selected-hover: var(--spectrum-actionbutton-border-color-quiet-selected-hover);
	--spectrum-actionbutton-border-color-selected-down: var(--spectrum-actionbutton-border-color-quiet-selected-down);
	--spectrum-actionbutton-border-color-selected-focus: var(--spectrum-actionbutton-border-color-quiet-selected-focus);

	--spectrum-actionbutton-background-color-selected-disabled: var(--spectrum-actionbutton-background-color-quiet-selected-disabled);
	--spectrum-actionbutton-border-color-selected-disabled: var(--spectrum-actionbutton-border-color-quiet-selected-disabled);

	&.spectrum-ActionButton--staticBlack,
	&.spectrum-ActionButton--staticWhite {
		--spectrum-actionbutton-border-color-default: var(--spectrum-actionbutton-border-color-quiet-static-default);
		--spectrum-actionbutton-border-color-hover: var(--spectrum-actionbutton-border-color-quiet-static-hover);
		--spectrum-actionbutton-border-color-down: var(--spectrum-actionbutton-border-color-quiet-static-down);
		--spectrum-actionbutton-border-color-focus: var(--spectrum-actionbutton-border-color-quiet-static-focus);

		--spectrum-actionbutton-border-color-disabled: var(--spectrum-actionbutton-border-color-quiet-static-disabled);
	}
}

.spectrum-ActionButton--staticBlack {
	--spectrum-actionbutton-background-color-default: var(--spectrum-actionbutton-background-color-static-black-default);
	--spectrum-actionbutton-background-color-hover: var(--spectrum-actionbutton-background-color-static-black-hover);
	--spectrum-actionbutton-background-color-down: var(--spectrum-actionbutton-background-color-static-black-down);
	--spectrum-actionbutton-background-color-focus: var(--spectrum-actionbutton-background-color-static-black-focus);

	--spectrum-actionbutton-border-color-default: var(--spectrum-actionbutton-border-color-static-black-default);
	--spectrum-actionbutton-border-color-hover: var(--spectrum-actionbutton-border-color-static-black-hover);
	--spectrum-actionbutton-border-color-down: var(--spectrum-actionbutton-border-color-static-black-down);
	--spectrum-actionbutton-border-color-focus: var(--spectrum-actionbutton-border-color-static-black-focus);

	--spectrum-actionbutton-content-color-default: var(--spectrum-actionbutton-content-color-static-black-default);
	--spectrum-actionbutton-content-color-hover: var(--spectrum-actionbutton-content-color-static-black-hover);
	--spectrum-actionbutton-content-color-down: var(--spectrum-actionbutton-content-color-static-black-down);
	--spectrum-actionbutton-content-color-focus: var(--spectrum-actionbutton-content-color-static-black-focus);

	--spectrum-actionbutton-focus-indicator-color: var(--spectrum-actionbutton-focus-indicator-static-black-color);

	--spectrum-actionbutton-background-color-disabled: var(--spectrum-actionbutton-background-color-static-black-disabled);
	--spectrum-actionbutton-border-color-disabled: var(--spectrum-actionbutton-border-color-static-black-disabled);
	--spectrum-actionbutton-content-color-disabled: var(--spectrum-actionbutton-content-color-static-black-disabled);

	--spectrum-actionbutton-background-color-selected-default: var(--spectrum-actionbutton-background-color-static-black-selected-default);
	--spectrum-actionbutton-background-color-selected-hover: var(--spectrum-actionbutton-background-color-static-black-selected-hover);
	--spectrum-actionbutton-background-color-selected-down: var(--spectrum-actionbutton-background-color-static-black-selected-down);
	--spectrum-actionbutton-background-color-selected-focus: var(--spectrum-actionbutton-background-color-static-black-selected-focus);

	--spectrum-actionbutton-content-color-selected-default: var(--spectrum-actionbutton-content-color-static-black-selected-default);
	--spectrum-actionbutton-content-color-selected-hover: var(--spectrum-actionbutton-content-color-static-black-selected-hover);
	--spectrum-actionbutton-content-color-selected-down: var(--spectrum-actionbutton-content-color-static-black-selected-down);
	--spectrum-actionbutton-content-color-selected-focus: var(--spectrum-actionbutton-content-color-static-black-selected-focus);

	--spectrum-actionbutton-background-color-selected-disabled: var(--spectrum-actionbutton-background-color-static-black-selected-disabled);
	--spectrum-actionbutton-border-color-selected-disabled: var(--spectrum-actionbutton-border-color-static-black-selected-disabled);
}

.spectrum-ActionButton--staticWhite {
	--spectrum-actionbutton-background-color-default: var(--spectrum-actionbutton-background-color-static-white-default);
	--spectrum-actionbutton-background-color-hover: var(--spectrum-actionbutton-background-color-static-white-hover);
	--spectrum-actionbutton-background-color-down: var(--spectrum-actionbutton-background-color-static-white-down);
	--spectrum-actionbutton-background-color-focus: var(--spectrum-actionbutton-background-color-static-white-focus);

	--spectrum-actionbutton-border-color-default: var(--spectrum-actionbutton-border-color-static-white-default);
	--spectrum-actionbutton-border-color-hover: var(--spectrum-actionbutton-border-color-static-white-hover);
	--spectrum-actionbutton-border-color-down: var(--spectrum-actionbutton-border-color-static-white-down);
	--spectrum-actionbutton-border-color-focus: var(--spectrum-actionbutton-border-color-static-white-focus);

	--spectrum-actionbutton-content-color-default: var(--spectrum-actionbutton-content-color-static-white-default);
	--spectrum-actionbutton-content-color-hover: var(--spectrum-actionbutton-content-color-static-white-hover);
	--spectrum-actionbutton-content-color-down: var(--spectrum-actionbutton-content-color-static-white-down);
	--spectrum-actionbutton-content-color-focus: var(--spectrum-actionbutton-content-color-static-white-focus);

	--spectrum-actionbutton-focus-indicator-color: var(--spectrum-actionbutton-focus-indicator-color-static-white);

	--spectrum-actionbutton-background-color-disabled: var(--spectrum-actionbutton-background-color-static-white-disabled);
	--spectrum-actionbutton-border-color-disabled: var(--spectrum-actionbutton-border-color-static-white-disabled);
	--spectrum-actionbutton-content-color-disabled: var(--spectrum-actionbutton-content-color-static-white-disabled);

	--spectrum-actionbutton-background-color-selected-default: var(--spectrum-actionbutton-background-color-static-white-selected-default);
	--spectrum-actionbutton-background-color-selected-hover: var(--spectrum-actionbutton-background-color-static-white-selected-hover);
	--spectrum-actionbutton-background-color-selected-down: var(--spectrum-actionbutton-background-color-static-white-selected-down);
	--spectrum-actionbutton-background-color-selected-focus: var(--spectrum-actionbutton-background-color-static-white-selected-focus);

	--spectrum-actionbutton-content-color-selected-default: var(--spectrum-actionbutton-content-color-static-white-selected-default);
	--spectrum-actionbutton-content-color-selected-hover: var(--spectrum-actionbutton-content-color-static-white-selected-hover);
	--spectrum-actionbutton-content-color-selected-down: var(--spectrum-actionbutton-content-color-static-white-selected-down);
	--spectrum-actionbutton-content-color-selected-focus: var(--spectrum-actionbutton-content-color-static-white-selected-focus);

	--spectrum-actionbutton-background-color-selected-disabled: var(--spectrum-actionbutton-background-color-static-white-selected-disabled);
	--spectrum-actionbutton-border-color-selected-disabled: var(--spectrum-actionbutton-border-color-static-white-selected-disabled);
}

@media (forced-colors: active) {
	.spectrum-ActionButton::after {
		/* make sure focus indicator renders */
		forced-color-adjust: none;
	}

	.spectrum-ActionButton.is-selected {
		& .spectrum-ActionButton-icon,
		& .spectrum-ActionButton-hold,
		& .spectrum-ActionButton-label {
			/* ensure custom text colors from above get applied */
			/* it seems like this shouldn't have to be done, but colors are wrong without it */
			forced-color-adjust: none;
		}
	}
}
