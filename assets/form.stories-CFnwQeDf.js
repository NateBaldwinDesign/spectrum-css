import{T as p}from"./template-3_GwNtJp.js";import{T as R}from"./template-yFw8yCf1.js";import{T as D}from"./template-RHf5ahrK.js";import{d as k}from"./index-BL42WGY7.js";import{T as I}from"./template-DKNxuYlE.js";import{T as c}from"./template-D8Wcx5f1.js";import{p as G,m as H}from"./package-CI64g4xv.js";import{T as _}from"./template-dLdKE6bV.js";import{R as l,s as E,n as N,r as Q,g as V,V as W}from"./decorator-B_b3GAa1.js";import{k as f}from"./lit-element-C96egxJg.js";import{t as q}from"./if-defined-B5hOZ0d5.js";import{Q as z}from"./repeat-ucdLIltR.js";import"./template-BOh7f2NE.js";import"./template-YMy-Jbg4.js";import"./template-BS9HHlDf.js";import"./template-D-V4AAli.js";import"./template-CBWtDg95.js";import"./capitalize-D60SaZ2R.js";import"./template-DxaIXWdr.js";import"./template-C4DdnWO9.js";import"./template-D1tEZlkV.js";import"./template-BBBDOSiF.js";import"./v4-CQkTLCs1.js";import"./directive-helpers-Vx9dmk2R.js";const m=({rootClass:e="spectrum-Form",labelPosition:t="top",fieldLabelAlignment:v="left",customClasses:x=[],customStyles:P={},id:S=V("form"),items:w=[]},d)=>f`
    <form
        class=${l({[e]:!0,[`${e}--labelsAbove`]:t==="top",...x.reduce((s,r)=>({...s,[r]:!0}),{})})}
        id=${q(S)}
        style=${E(P)}
    >
        ${z(w,s=>s.id,({label:s,content:r,...C})=>{if(r)return f`
                <div class=${l({[`${e}-item`]:!0})}>
                    ${N(s,()=>_({label:s,forInput:C.id,alignment:t==="side"?v:void 0},d))}
                    <div class=${l({[`${e}-itemField`]:!0})}>
                        ${Q(r,{context:d})}
                    </div>
                </div>
            `})}
    </form>
`,A=W({Template:m,testData:[{testHeading:"Default"},{testHeading:"Side labels with left-aligned text",labelPosition:"side"},{testHeading:"Side labels with right-aligned text",labelPosition:"side",fieldLabelAlignment:"right"}]}),ue={title:"Form",component:"Form",argTypes:{labelPosition:{name:"Label position",description:"Position of the field label in relation to the input.",type:{name:"string"},table:{type:{summary:"string"},category:"Component"},control:"select",options:["top","side"]},fieldLabelAlignment:{name:"Field label alignment",type:{name:"string"},table:{type:{summary:"string"},category:"Component"},control:"select",options:["left","right"],if:{arg:"labelPosition",eq:"side"}},items:{table:{disable:!0}}},args:{rootClass:"spectrum-Form",labelPosition:"top",items:[{label:"Company title",id:"form-example-company",content:[(e,t)=>c({...e,multiline:!0,name:"field"},t)]},{label:"Email address",id:"form-example-email",content:[(e,t)=>c({...e,type:"email",name:"email"},t)]},{label:"Country",id:"form-example-country",content:[(e,t)=>D({...e,placeholder:"Select a country",name:"country"},t)]},{label:"Interest",id:"form-example-interests",content:[(e,t)=>R({layout:"horizontal",items:[p({...e,label:"Kittens",customClasses:["spectrum-FieldGroup-item"]},t),p({...e,label:"Puppies",customClasses:["spectrum-FieldGroup-item"]},t)]})]},{label:"Age",id:"form-example-amount",content:[(e,t)=>I({...e},t)]}]},parameters:{packageJson:G,metadata:H,docs:{description:{component:"The form component is used for aligning multiple inputs and field groups within a form. It provides structure and spacing for your form fields."}}}},a=A.bind({});a.args={};const o=m.bind({});o.args={...a.args,labelPosition:"side"};o.tags=["!dev"];o.parameters={chromatic:{disableSnapshot:!0}};o.storyName="Left-aligned side labels";const i=m.bind({});i.args={...a.args,labelPosition:"side",fieldLabelAlignment:"right"};i.tags=["!dev"];i.parameters={chromatic:{disableSnapshot:!0}};i.storyName="Right-aligned side labels";const n=A.bind({});n.args=a.args;n.tags=["!autodocs","!dev"];n.parameters={chromatic:{forcedColors:"active",modes:k}};var u,b,g;a.parameters={...a.parameters,docs:{...(u=a.parameters)==null?void 0:u.docs,description:{story:"A stacked layout with the labels above the form fields. The class `.spectrum-Form--labelPosition` is applied to the form itself. You do not need to apply a specific class to the field label because `.spectrum-FieldLabel--left` is applied to each to each [field label](/docs/components-field-label--docs) by default.",...(g=(b=a.parameters)==null?void 0:b.docs)==null?void 0:g.description}}};var h,y,$;o.parameters={...o.parameters,docs:{...(h=o.parameters)==null?void 0:h.docs,description:{story:"A two column layout with left-aligned label text.",...($=(y=o.parameters)==null?void 0:y.docs)==null?void 0:$.description}}};var T,F,L;i.parameters={...i.parameters,docs:{...(T=i.parameters)==null?void 0:T.docs,description:{story:"A two column layout with right-aligned label text. `.spectrum-FieldLabel--right` is applied to each to each [field label](/docs/components-field-label--docs).",...(L=(F=i.parameters)==null?void 0:F.docs)==null?void 0:L.description}}};const be=["Default","LeftAlignedSideLabels","RightAlignedSideLabels","WithForcedColors"];export{a as Default,o as LeftAlignedSideLabels,i as RightAlignedSideLabels,n as WithForcedColors,be as __namedExportsOrder,ue as default};
