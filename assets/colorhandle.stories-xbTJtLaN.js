import{d as a}from"./index-BL42WGY7.js";import{i as l,e as d}from"./states-D366RZcH.js";import{V as n}from"./decorator-B_b3GAa1.js";import{T as r}from"./template-D0DQkCcX.js";const i="index.css",p=[".spectrum-ColorHandle",".spectrum-ColorHandle-inner",".spectrum-ColorHandle.is-disabled",".spectrum-ColorHandle.is-disabled .spectrum-ColorHandle-inner",".spectrum-ColorHandle.is-focused",".spectrum-ColorHandle:after",".spectrum-ColorHandle:focus-visible"],m=["--mod-colorhandle-animation-duration","--mod-colorhandle-animation-easing","--mod-colorhandle-border-color","--mod-colorhandle-border-color-disabled","--mod-colorhandle-border-width","--mod-colorhandle-fill-color-disabled","--mod-colorhandle-focused-size","--mod-colorhandle-hitarea-border-radius","--mod-colorhandle-hitarea-size","--mod-colorhandle-inner-border-color","--mod-colorhandle-inner-border-width","--mod-colorhandle-outer-border-color","--mod-colorhandle-outer-border-width","--mod-colorhandle-size"],u=["--spectrum-color-handle-border-width","--spectrum-color-handle-inner-border-opacity","--spectrum-color-handle-inner-border-width","--spectrum-color-handle-outer-border-opacity","--spectrum-color-handle-outer-border-width","--spectrum-color-handle-size","--spectrum-color-handle-size-key-focus","--spectrum-colorhandle-animation-duration","--spectrum-colorhandle-animation-easing","--spectrum-colorhandle-border-color","--spectrum-colorhandle-border-color-disabled","--spectrum-colorhandle-border-width","--spectrum-colorhandle-fill-color-disabled","--spectrum-colorhandle-focused-size","--spectrum-colorhandle-hitarea-size","--spectrum-colorhandle-inner-border-color","--spectrum-colorhandle-inner-border-width","--spectrum-colorhandle-outer-border-color","--spectrum-colorhandle-outer-border-width","--spectrum-colorhandle-size"],h=["--spectrum-animation-duration-100","--spectrum-black-rgb","--spectrum-color-control-track-width","--spectrum-disabled-background-color","--spectrum-disabled-content-color","--spectrum-picked-color","--spectrum-white"],b=["--mod-opacity-checkerboard-position"],g={sourceFile:i,selectors:p,modifiers:m,component:u,global:h,"system-theme":[],passthroughs:b,"high-contrast":["--highcontrast-colorhandle-border-color","--highcontrast-colorhandle-border-color-disabled","--highcontrast-colorhandle-fill-color-disabled"]},f="@spectrum-css/colorhandle",C="8.2.0",y="The Spectrum CSS Color Handle component",D="Apache-2.0",w="Adobe",k="https://opensource.adobe.com/spectrum-css/colorhandle",H={type:"git",url:"https://github.com/adobe/spectrum-css.git",directory:"components/colorhandle"},x={url:"https://github.com/adobe/spectrum-css/issues"},S={".":"./dist/index.css","./*.md":"./*.md","./dist/*":"./dist/*","./index-*.css":"./dist/index-*.css","./index.css":"./dist/index.css","./metadata.json":"./metadata/metadata.json","./metadata/*":"./metadata/*","./package.json":"./package.json"},v="dist/index.css",W=["dist/*","*.md","package.json","metadata/*"],F={"@spectrum-css/colorloupe":">=5","@spectrum-css/opacitycheckerboard":">=2","@spectrum-css/tokens":">=14"},z={"@spectrum-css/colorloupe":{optional:!0}},j={"@spectrum-css/colorloupe":"workspace:^","@spectrum-css/opacitycheckerboard":"workspace:^","@spectrum-css/tokens":"workspace:^"},T=["spectrum","css","design system","adobe"],_={access:"public"},L=[{rootClass:"spectrum-ColorHandle",swc:"https://opensource.adobe.com/spectrum-web-components/components/color-handle/"}],M={name:f,version:C,description:y,license:D,author:w,homepage:k,repository:H,bugs:x,exports:S,main:v,files:W,peerDependencies:F,peerDependenciesMeta:z,devDependencies:j,keywords:T,publishConfig:_,spectrum:L},t=n({Template:r,wrapperStyles:{"justify-content":"center"},testData:[{testHeading:"Default"},{testHeading:"With color loupe",isWithColorLoupe:!0}],stateData:[{testHeading:"Disabled",isDisabled:!0,isFocused:!1},{testHeading:"Focused",isDisabled:!1,isFocused:!0}]}),O={title:"Color handle",component:"ColorHandle",argTypes:{isDisabled:l,isFocused:{...d,if:{arg:"isDisabled",truthy:!1}},isWithColorLoupe:{name:"With color loupe",type:{name:"boolean"},table:{type:{summary:"boolean"},category:"State"},control:"boolean"},selectedColor:{name:"Selected color",description:"The color of the handle.",type:{name:"string"},accept:"hex, rgb, rgba",control:"color"}},args:{rootClass:"spectrum-ColorHandle",isDisabled:!1,isFocused:!1,isWithColorLoupe:!1,selectedColor:"rgba(255 0 0 / 50%)",customStyles:{position:"relative",margin:"10px"}},parameters:{packageJson:M,metadata:g,docs:{description:{component:"The color handle component is used with color area, color slider and color wheel as the color selector."}}},tags:["!autodocs"]},c=t.bind({});c.args={};const o=r.bind({});o.args={isDisabled:!0};o.tags=["!dev"];o.parameters={chromatic:{disableSnapshot:!0}};const e=r.bind({});e.args={isWithColorLoupe:!0};e.tags=["!dev"];e.parameters={chromatic:{disableSnapshot:!0}};const s=t.bind({});s.tags=["!autodocs","!dev"];s.parameters={chromatic:{forcedColors:"active",modes:a}};const A=["Default","Disabled","WithColorLoupe","WithForcedColors"],P=Object.freeze(Object.defineProperty({__proto__:null,Default:c,Disabled:o,WithColorLoupe:e,WithForcedColors:s,__namedExportsOrder:A,default:O},Symbol.toStringTag,{value:"Module"}));export{P as C,c as D,e as W,o as a};
