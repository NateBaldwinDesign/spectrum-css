import{d as x}from"./index-BL42WGY7.js";import{T as v,a as n}from"./tag.stories-Be8msibQ.js";import{R as w,s as k,V as C}from"./decorator-B_b3GAa1.js";import{k as R}from"./lit-element-C96egxJg.js";import{t as D}from"./if-defined-B5hOZ0d5.js";import"./icon.stories-B6MFXz_J.js";import"./variants-YiDXN7gG.js";import"./template-DxaIXWdr.js";import"./capitalize-D60SaZ2R.js";import"./template-BOh7f2NE.js";import"./states-D366RZcH.js";import"./template-yixAkgA6.js";import"./template-BZEy7RVv.js";import"./v4-CQkTLCs1.js";const E="index.css",S=[".spectrum-TagGroup",".spectrum-TagGroup-item"],z=["--mod-tag-group-item-margin-block","--mod-tag-group-item-margin-inline"],G=["--spectrum-tag-group-item-margin-block","--spectrum-tag-group-item-margin-inline"],j=["--spectrum-spacing-75"],$=[],A={sourceFile:E,selectors:S,modifiers:z,component:G,global:j,"system-theme":[],passthroughs:$,"high-contrast":[]},F="@spectrum-css/taggroup",H="5.2.0",O="The Spectrum CSS tag group component",W="Apache-2.0",_="Adobe",B="https://opensource.adobe.com/spectrum-css/taggroup",L={type:"git",url:"https://github.com/adobe/spectrum-css.git",directory:"components/taggroup"},V={url:"https://github.com/adobe/spectrum-css/issues"},q={".":"./dist/index.css","./*.md":"./*.md","./dist/*":"./dist/*","./index-*.css":"./dist/index-*.css","./index.css":"./dist/index.css","./metadata.json":"./metadata/metadata.json","./metadata/*":"./metadata/*","./package.json":"./package.json"},I="dist/index.css",J=["dist/*","*.md","package.json","metadata/*"],M={"@spectrum-css/tag":">=9","@spectrum-css/tokens":">=14"},P={"@spectrum-css/tag":"workspace:^","@spectrum-css/tokens":"workspace:^"},U=["spectrum","css","design system","adobe"],K={access:"public"},N=[{guidelines:"https://spectrum-contributions.corp.adobe.com/page/tag-group-beta",rootClass:"spectrum-TagGroup",swc:"https://opensource.adobe.com/spectrum-web-components/components/tags/"}],Q={name:F,version:H,description:O,license:W,author:_,homepage:B,repository:L,bugs:V,exports:q,main:I,files:J,peerDependencies:M,devDependencies:P,keywords:U,publishConfig:K,spectrum:N},m=({rootClass:s="spectrum-TagGroup",ariaLabel:a,items:e=[],isRemovable:d=!1,customClasses:u=[],customStyles:b={},size:h="m",...T}={},f={})=>R`
	<div
		class=${w({[s]:!0,...u.reduce((o,y)=>({...o,[y]:!0}),{})})}
		style=${k(b)}
		role="list"
		aria-label=${D(a)}
	>
		${e.map(o=>v({...o,...T,size:h,hasClearButton:d,customClasses:[`${s}-item`]},f))}
	</div>
`,l=C({Template:m,sizeDirection:"row",testData:[{testHeading:"Default"},{testHeading:"Is removable",isRemovable:!0},{testHeading:"Overflow",isRemovable:!0,isEmphasized:!1,customStyles:{"max-width":"300px"},items:[{label:"Tag 1 Example"},{label:"Tag 2 Example"},{label:"Tag 3 Example"},{label:"Tag 4"},{label:"Tag 5"},{label:"Tag 6"},{label:"Tag 7"}]}]}),X=["rootClass","hasClearButton","label"],ge={title:"Tag group",component:"TagGroup",argTypes:{...Object.entries(n.argTypes).reduce((s,[a,e])=>X.includes(a)?s:(["size"].includes(a)?e.table={...e.table,category:"Shared settings"}:e.table={...e.table,category:"Tag settings"},{...s,[a]:e}),{}),ariaLabel:{name:"Aria-label",type:{name:"string"},table:{type:{summary:"string"},category:"Content"},control:{type:"text"}},items:{table:{disable:!0}},isRemovable:{name:"Removable tags",description:"True if a button is present to clear the tag.",type:{name:"boolean"},table:{type:{summary:"boolean"},category:"Shared settings"},control:"boolean"}},args:{rootClass:"spectrum-TagGroup",isRemovable:!1,size:"m"},parameters:{actions:{handles:[...n.parameters.actions.handles??[]]},packageJson:Q,metadata:A,docs:{description:{component:`A group of [tags](?path=/docs/components-tag--docs). Tags allow users to categorize content. They can represent keywords or people, and are grouped to describe an item or a search request.

When horizontal space is limited in a tag group, the individual tags wrap to form another line.`}}}},g=l.bind({});g.args={ariaLabel:"Tags",items:[{label:"Tag 1"},{label:"Tag 2"},{label:"Tag 3"}]};const t=m.bind({});t.tags=["!dev"];t.parameters={chromatic:{disableSnapshot:!0}};t.args={isRemovable:!0,isEmphasized:!1,customStyles:{"max-width":"300px"},items:[{label:"Tag 1 Example"},{label:"Tag 2 Example"},{label:"Tag 3 Example"},{label:"Tag 4",avatarUrl:"example-ava.png"},{label:"Tag 5"},{label:"Tag 6"},{label:"Tag 7"}]};const r=l.bind({});r.args=g.args;r.tags=["!autodocs","!dev"];r.parameters={chromatic:{forcedColors:"active",modes:x}};var i,c,p;t.parameters={...t.parameters,docs:{...(i=t.parameters)==null?void 0:i.docs,description:{story:"A tag group can contain removable tags when the context is for editing or non-removable tags when tags are read-only. Removable and non-removable tags cannot be combined within the tag group.",...(p=(c=t.parameters)==null?void 0:c.docs)==null?void 0:p.description}}};const de=["Default","Removable","WithForcedColors"];export{g as Default,t as Removable,r as WithForcedColors,de as __namedExportsOrder,ge as default};
