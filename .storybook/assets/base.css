/*!
 * Copyright 2023 Adobe. All rights reserved.
 *
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at <http://www.apache.org/licenses/LICENSE-2.0>
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */

body {
	margin: 0;
	font-size: 10px;
}

nav .spectrum-Site-logo {
	block-size: 32px;
	margin-inline-end: 16px;
	color: #fa0f00;
}

.spectrum--large nav .spectrum-Site-logo {
	block-size: 40px;
}

.docblock-argstable-head {
	display: none;
}

.docblock-argstable-body tr td {
	font-size: 11px;
	color: rgb(34, 34, 34);
	letter-spacing: unset;
	background-color: rgb(255, 255, 255);
}

.docblock-argstable-body td > span:has(select),
.docblock-argstable-body td textarea {
	max-inline-size: 280px !important;
}

#storybook-explorer-tree {
	background-color: rgb(255, 255, 255) !important;
}

#storybook-explorer-tree > div {
	margin-inline: 0;
}

button.sidebar-item {
	font-weight: 700 !important;
}

.sidebar-item {
	block-size: 32px !important;
	margin-block: 4px !important;
	padding-block: 4px !important;
	padding-inline-start: 24px !important;
	padding-inline-end: 12px !important;

	font-size: 14px !important;
	font-weight: 400 !important;
	line-height: 1.4em !important;
	color: rgb(34, 34, 34) !important;

	border-radius: 4px !important;
}

input,
textarea,
select {
	border-radius: 4px !important;
}

#storybook-explorer-searchfield {
	padding: 3px 12px 5px 35px !important;
}

input:focus,
textarea:focus,
select:focus,
#storybook-explorer-searchfield:focus {
	border-color: rgb(2, 101, 220) !important;
	box-shadow: rgb(2, 101, 220) 0 0 0 1px inset !important;
}

.sidebar-item svg {
	display: none;
	color: rgb(34, 34, 34) !important;
}

[role="main"]
	> div
	> div:first-child
	.os-content
	> div
	> :is(div, div > div:has(a)) {
	gap: 4px;
}

[role="main"] > div > div:first-child .os-content > div > div > div:has(a) {
	display: flex;
}

[role="main"]
	> div
	> div:first-child
	.os-content
	> div
	> div
	:is(button, a:not(:has(button))) {
	min-inline-size: 32px;
	margin: 0;
	padding-block: 4px;
	padding-inline: 11px;

	font-weight: 300;
	line-height: 1.3;
	color: rgb(34, 34, 34) !important;

	/* background-color: transparent !important; */
	border-color: transparent !important;
	border-radius: 4px;

	transition: background 130ms ease-out, border-color 130ms ease-out,
		color 130ms ease-out, box-shadow 130ms ease-out;
}

[role="main"] > div > div:first-child .os-content > div > div > * {
	margin-block-start: 0 !important;
}

[role="main"] > div > div:first-child .os-content > div > div > div > a {
	display: flex;
	align-items: flex-end;
	justify-content: flex-end;
}

/* Indicates a button with a dropdown menu */
[role="main"]
	> div
	> div:first-child
	.os-content
	> div
	> div
	> div:not(:has(a))
	button {
	position: relative;
	background-color: rgb(253, 253, 253) !important;
	border: 1px solid rgb(144, 144, 144) !important;
}

/* Indicates a button with a dropdown menu */
[role="main"]
	> div
	> div:first-child
	.os-content
	> div
	> div
	> div:not(:has(a))
	button::after {
	content: "â—¢";

	position: absolute;
	inset-block-end: -3px;
	inset-inline-end: -1px;
	transform: scale(0.5);

	display: inline-block;

	color: rgb(177, 177, 177);
}

[role="main"]
	> div
	> div:first-child
	.os-content
	> div
	> div
	> div:not(:has(a))
	button:hover {
	background-color: rgb(242, 242, 242) !important;
}

[role="main"] > div > div:first-child .os-content > div > div > * {
	margin-inline: 0 !important;
}

[role="main"]
	> div
	> div:first-child
	.os-content
	> div
	> div
	:is(button, a:not(:has(button)), span) {
	block-size: 32px;
}

[role="main"]
	> div
	> div:first-child
	.os-content
	> div
	> div
	:is(button:hover, a:hover:not(:has(button))) {
	background-color: rgb(230, 230, 230) !important;
}
